/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import com.mxgraph.model.mxIGraphModel;
import javax.swing.JFrame;
import com.mxgraph.swing.mxGraphComponent;
import com.mxgraph.view.mxGraph;
import controller.Papalegua;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
/**
 *
 * @author user
 */
public class Principal extends javax.swing.JFrame {
    private mxGraphComponent graphComponent;
    private mxGraph graph;
    private Papalegua controller = new Papalegua();
    private Object[] bairros;
    private Object[] arestas;
    private int bairro1;
    private int bairro2;
    /**
     * Creates new form testForm
     */
    public Principal() {
        bairros = new Object[50];
        bairro1=-1;
        bairro2=-1;
        
        initComponents();
        iniciarGraph();
        this.setSize(1200,600);      
        
        //adiciona os bairros ao list
        for (int i=0;i<50;i++){
            ListaBairros.add(Integer.toString(i+1)+" - "+controller.getBairros()[i]);
        }     
        
        
        botaoIr.setEnabled(false);
        botaoAlterarTempo.setEnabled(false);       
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        botaoIr = new java.awt.Button();
        botaoAlterarTempo = new java.awt.Button();
        botaoAlterarCusto = new java.awt.Button();
        textBairro1 = new java.awt.TextField();
        textBairro2 = new java.awt.TextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        botaoSalva = new java.awt.Button();
        ListaBairros = new java.awt.List();
        label3 = new java.awt.Label();
        painelMapa = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Papaleguas");

        panelPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelPrincipal.setLayout(new java.awt.GridBagLayout());

        botaoIr.setLabel("Ir");
        botaoIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 8, 5);
        panelPrincipal.add(botaoIr, gridBagConstraints);

        botaoAlterarTempo.setLabel("Alterar tempo de Percurso");
        botaoAlterarTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarTempoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 12, 9, 12);
        panelPrincipal.add(botaoAlterarTempo, gridBagConstraints);

        botaoAlterarCusto.setLabel("Alterar Custo");
        botaoAlterarCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarCustoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 72;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 12, 14, 12);
        panelPrincipal.add(botaoAlterarCusto, gridBagConstraints);

        textBairro1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 12, 10, 12);
        panelPrincipal.add(textBairro1, gridBagConstraints);

        textBairro2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 12, 12, 12);
        panelPrincipal.add(textBairro2, gridBagConstraints);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setText("Bairro Origem");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 12, 0, 12);
        panelPrincipal.add(label1, gridBagConstraints);

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setText("Bairro destino");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 13, 0, 12);
        panelPrincipal.add(label2, gridBagConstraints);

        botaoSalva.setLabel("Salvar");
        botaoSalva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 13, 8, 12);
        panelPrincipal.add(botaoSalva, gridBagConstraints);

        ListaBairros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ListaBairrosItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 82;
        gridBagConstraints.weightx = 1.7;
        gridBagConstraints.weighty = 0.9;
        gridBagConstraints.insets = new java.awt.Insets(9, 12, 16, 14);
        panelPrincipal.add(ListaBairros, gridBagConstraints);

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setText("Bairros");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(7, 13, 0, 12);
        panelPrincipal.add(label3, gridBagConstraints);

        getContentPane().add(panelPrincipal, java.awt.BorderLayout.WEST);

        painelMapa.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(painelMapa, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void iniciarGraph(){
        graph = new mxGraph();
        graphComponent = new mxGraphComponent(graph); //cria o componente de interface grafica
        graphComponent.setBounds(0,0,painelMapa.getWidth(),painelMapa.getHeight());
        
        graphComponent.setBackgroundImage(new ImageIcon("mapa.jpg"));
        painelMapa.add(graphComponent);
        
        //  graph.setCellsEditable(false);
        //  graph.setCellsMovable(false);
        //  graph.setCellsResizable(false);
        //  graph.setCellsSelectable(false);
        
        carregaGrafo();
        //cria um listener do mouse
        graphComponent.getGraphControl().addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent me) {
               
                
            }
            @Override
            public void mousePressed(MouseEvent me) {
                
                
            }

            @Override
            //dispara ao clickar no graphComponent
            public void mouseReleased(MouseEvent me) {
                //obtem o vertice que está na posição do mouse
                Object aux = graphComponent.getCellAt(me.getX(), me.getY());
                if(bairro1==-1){
                    bairro1= buscaVertice(aux);
                    if(bairro1>-1)
                        textBairro1.setText(controller.getBairros()[bairro1]);
                }
                else if(bairro2==-1){
                    bairro2=buscaVertice(aux);
                    if(bairro2>-1){
                        textBairro2.setText(controller.getBairros()[bairro2]);
                        botaoIr.setEnabled(true);
                        if(controller.getGrafo().getCaminho(bairro1, bairro2) != null)
                            botaoAlterarTempo.setEnabled(true);
                    }
                }
                else{
                    bairro1=buscaVertice(aux);
                    if(bairro1>-1){
                        textBairro1.setText(controller.getBairros()[bairro1]);
                        bairro2=-1;
                        textBairro2.setText("");
                        botaoIr.setEnabled(false);
                        botaoAlterarTempo.setEnabled(false);
                    }
                }
             
            }   

            @Override
            public void mouseEntered(MouseEvent me) {
            }

            @Override
            public void mouseExited(MouseEvent me) {
            }
        });  
    }
    
        
    private void carregaGrafo(){
        if(new File("config").exists()){
            ObjectInputStream entrada =null;
                try {
                entrada = new ObjectInputStream(new FileInputStream("config"));
                for(int k=0;k<50;k++){
                    double i = entrada.readDouble();
                    double j =entrada.readDouble();
                    bairros[k] = graph.insertVertex(graph.getDefaultParent(), null,controller.getBairros()[k],i , j , 100,50);           
                }
                entrada.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);       
            }
        }
        else{
            for(int i=0;i<5;i++){
                for(int j=0;j<10;j++){
                    double x = 20 + j*30;
                    double y = 20 + i*30;
                    bairros[10*i+j] = graph.insertVertex(graph.getDefaultParent(), null,10*i+j+1,x , y , 20,20,"shape=ellipse;perimeter=20;fillColor=black;fontColor=white");           
                }
            }
        }
    }

    //busca um vertice no vetor que guarda os vertices e retorna o seu indice se não existir retorn -1
    public int buscaVertice(Object o){
        for(int i =0;i<50;i++){
            if(bairros[i]==o){
                return i;
            }
        }
        return -1;
    }
    
    private void botaoSalvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvaActionPerformed
        ObjectOutputStream saida = null;
        try {
            saida = new ObjectOutputStream(new FileOutputStream("config"));
            for(int i=0;i<50;i++){
                saida.writeDouble(graph.getCellGeometry(bairros[i]).getX());
                saida.writeDouble(graph.getCellGeometry(bairros[i]).getY());
            }
            saida.close();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botaoSalvaActionPerformed

    private void botaoAlterarCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarCustoActionPerformed
        float custo = (float)controller.getCompany().getValor1km();
        AlterarCusto janela = new AlterarCusto(this, true, custo);
        janela.setVisible(true);
        if(janela.teveErro()){
            Mensagem msg = new Mensagem(this,true,"Valor inválido, tente novamente","Erro alterar custo de percurso");
            msg.setVisible(true);
            janela.setVisible(true);
            janela.setTemErro(false);
        }
        else
        {
            controller.getCompany().setValor1km(janela.getCusto());
        }
    }//GEN-LAST:event_botaoAlterarCustoActionPerformed

    private void botaoAlterarTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarTempoActionPerformed
        Float tempo= controller.getGrafo().getCaminho(bairro1, bairro2).getTempo();
        AlterarTempo janela = new AlterarTempo(this,true,tempo);
        janela.setVisible(true);
        if(janela.getErro()){
            Mensagem msg = new Mensagem(this,true,"Valor inválido, tente novamente","Erro alterar tempo de percurso");
            msg.setVisible(true);
            janela.setVisible(true);
            janela.setTemErro(false);
        }
        else{
            controller.getGrafo().getCaminho(bairro1, bairro2).setTempo(janela.getTempo());
        }
    }//GEN-LAST:event_botaoAlterarTempoActionPerformed

    private void botaoIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIrActionPerformed
        if(arestas!=null){
            if(arestas.length>0){
                for(Object o:arestas){
                    graph.getModel().remove(o);
                }
            }
        }
        Object parent = graph.getDefaultParent();
        //obtem o tempo do percurso
        float tempo = controller.caminhoMaisRapido(bairro1, bairro2);
        float custo = controller.getCustoRota();
        //cria vetor de arestas
        arestas = new Object[controller.getRota().length-1];
        for(int i=0;i<controller.getRota().length-1;i++){
            //cria aresta entre os vertices do percurso
            arestas[i]=graph.insertEdge(parent, null, null, bairros[controller.getRota()[i]] ,bairros[controller.getRota()[i+1]] );
        }
        //cria tela que mostra os dados
        TelaResultado result = new TelaResultado(controller.getBairros()[bairro1], controller.getBairros()[bairro2], tempo, custo);
        //torna tela visivel
        result.setVisible(true);
    }//GEN-LAST:event_botaoIrActionPerformed

    private void ListaBairrosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ListaBairrosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaBairrosItemStateChanged

   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.List ListaBairros;
    private java.awt.Button botaoAlterarCusto;
    private java.awt.Button botaoAlterarTempo;
    private java.awt.Button botaoIr;
    private java.awt.Button botaoSalva;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private javax.swing.JPanel painelMapa;
    private javax.swing.JPanel panelPrincipal;
    private java.awt.TextField textBairro1;
    private java.awt.TextField textBairro2;
    // End of variables declaration//GEN-END:variables
}
